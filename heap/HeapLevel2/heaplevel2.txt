{\rtf1\ansi\ansicpg1252\cocoartf1504\cocoasubrtf830
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 HeapLevel2 by Billy Ellis (@bellis1000)\
\
This level introduces Use-After-Free (UAF) vulnerabilities. These are a special type of heap vulnerability that occurs when an object is re-used after it has been free()\'92d. In some cases this can lead to arbitrary code execution.\
\
The specific vulnerability found within HeapLevel2 is a replica of the kernel UAF bug exploited by the Pangu team in their iOS 9.0 - 9.1 untethered jailbreak.\
\
The goal is to call winner() and spawn a shell.\
\
Have fun! ;)}